using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Linq;
using System.Reflection;

namespace Application.Extensions
{
    public static class EnumExtension
    {
        public static string GetEnumDescription<TEnum>(this TEnum source)
        {
            FieldInfo fi = source.GetType().GetField(source.ToString());

            DescriptionAttribute[] attributes = (DescriptionAttribute[])fi.GetCustomAttributes(
                typeof(DescriptionAttribute), false);

            if (attributes != null && attributes.Length > 0)
                return attributes[0].Description;
            else
                return source.ToString();
        }

        public static string MapPropertyDescription<T>(this Enum source) where T : class
        {
            var model = Activator.CreateInstance<T>();
            var propertie = Activator.CreateInstance(typeof(T)).GetType().GetProperty(source.ToString());
            return propertie.GetPropertyDescription();
        }
    }
}
