using System;
using System.Collections.Generic;
using System.Web.Mvc;

namespace Application.Extensions
{
    public static class DictionaryExtension
    {
        public static IEnumerable<SelectListItem> GetSelectList<Tkey, Tvalue>(this Dictionary<Tkey, Tvalue> source, IEnumerable<Tkey> patten = null)
        {
            var selectList = new List<SelectListItem>();
            foreach (var elemet in source)
            {
                if (patten != null)
                {
                    if (patten.Contains(elemet.Key))
                    {
                        selectList.Add(new SelectListItem
                        {
                            Value = Convert.ToString(elemet.Key),
                            Text = Convert.ToString(elemet.Value),
                            Selected = true
                        });
                    }
                    else
                    {
                        selectList.Add(new SelectListItem
                        {
                            Value = Convert.ToString(elemet.Key),
                            Text = Convert.ToString(elemet.Value)
                        });
                    }
                }
                else
                {
                    selectList.Add(new SelectListItem
                    {
                        Value = Convert.ToString(elemet.Key),
                        Text = Convert.ToString(elemet.Value)
                    });
                }
            }
            return selectList;
        }

        public static Dictionary<Tkey, Tvalue> ItemFilter<Tkey, Tvalue>(this Dictionary<Tkey, Tvalue> source, List<string> filter)
        {
            var newList = new Dictionary<Tkey, Tvalue>(source);
            if (filter.Count() > 0)
            {
                Dictionary<Tkey, Tvalue> deleteList = new Dictionary<Tkey, Tvalue>();
                foreach (KeyValuePair<Tkey, Tvalue> item in source)
                {
                    if (filter.Contains<string>(item.Value.ToString()))
                        deleteList.Add(item.Key, item.Value);
                }

                foreach (KeyValuePair<Tkey, Tvalue> item in deleteList)
                    newList.Remove(item.Key);
            }
            return newList;
        }
    }
}
